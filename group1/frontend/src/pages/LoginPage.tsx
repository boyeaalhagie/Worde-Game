import "../styles/Login.css";
import React from "react";
import { LoginRequest } from "../request/LoginRequest";
import { LoginResponse } from "../request/LoginResponse";
import { SignUpRequest } from "../request/SignUpRequest";
import { SignUpResponse } from "../request/SignUpResponse";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import { useState } from "react";
import {backendAddress} from "../util";

/**
 * Represents the Home page component.
 * @component
 */
const LoginPage: React.FC = () => {
  const container = document.getElementById("landing-container");
  const registerBtn = document.getElementById("register");
  const loginBtn = document.getElementById("login");

  registerBtn?.addEventListener("click", () => {
    container?.classList.add("active");
  });

  loginBtn?.addEventListener("click", () => {
    container?.classList.remove("active");
  });

  const navigate = useNavigate();
  const [isSignUp, setIsSignUp] = useState(false);
  const [username, setUsername] = useState("");

  /**
   * Toggle between sign up and sign in
   */
  const handleToggle = () => {
    setIsSignUp(!isSignUp);
  };

  /**
   * Handles the creation of a new user account
   */
  const handleSignUp = (event: React.FormEvent) => {
    event.preventDefault();
    console.log("Signing up");
    let signUpRequest = new SignUpRequest(username);
    console.log(signUpRequest);
    axios.post(backendAddress() + "sign-up", signUpRequest).then((res) => {
      //cast res
      let signUpRes: SignUpResponse = res.data;
      console.log(signUpRes);
      if (signUpRes.success) {
        // store user
        localStorage.setItem("user", JSON.stringify(signUpRes.user));
        navigate("/game");
      } else {
        alert("Something went wrong");
      }
    });
  };

  /**
   * Handles the logging in of a user
   */
  const handleLogin = (event: React.FormEvent) => {
    event.preventDefault();
    console.log("Logging in");
    let loginRequest = new LoginRequest(false, username);
    console.log(loginRequest);
    axios.post(backendAddress() + "login", loginRequest).then((res) => {
      //cast res
      let loginRes: LoginResponse = res.data;
      console.log(loginRes);
      if (loginRes.success) {
        // store user
        localStorage.setItem("user", JSON.stringify(loginRes.user));
        navigate("/game");
      } else {
        alert("Something went wrong");
      }
    });
  };

  /**
   * Handles playing the game as a guest
   * @param event The mouse event generated by clicking the play as guest button
   */
  const handlePlayAsGuest = (event: React.MouseEvent) => {
    event.preventDefault();
    console.log("Playing as guest");
    let guestLoginRequest = new LoginRequest(true);
    console.log(guestLoginRequest);
    axios.post(backendAddress() + "login", guestLoginRequest).then((res) => {
      //cast res
      let loginRes: LoginResponse = res.data;
      console.log(loginRes);
      if (loginRes.success) {
        // store user
        localStorage.setItem("user", JSON.stringify(loginRes.user));
        navigate("/game");
      } else {
        alert("Something went wrong");
      }
    });
  };

  return (
    <div className="landing-container" id="landing-container">
      <div className="form-landing-container sign-up">
        <form>
          <h1>Create Account</h1>
          <input
            type="text"
            placeholder="Username"
            onChange={(e) => setUsername(e.target.value)}
          />
          <input type="password" placeholder="Password" />
          <button onClick={handleSignUp}>Sign Up</button>
        </form>
      </div>
      <div className="form-landing-container sign-in">
        <form>
          <h1 className="welcome">
            Wordle <img className="wordle-icon" src={require('./wordle.png')} alt=""/>
          </h1>
          <button className="play-btn" onClick={handlePlayAsGuest}>
            Play As Guest
          </button>
          <h1 className="welcome">
            Sign in
          </h1>
          <input
              type="text"
              placeholder="Username"
              style={{fontWeight: "bold"}}
              onChange={(e) => setUsername(e.target.value)}
          />
          <input
              type="password"
              placeholder="Password"
              style={{fontWeight: "bold"}}
          />
          <button onClick={handleLogin}>Sign In</button>
        </form>
      </div>
      <div className="toggle-landing-container">
        <div className="toggle">
          <div className="toggle-panel toggle-left">
            <h1>Register!</h1>
            <p>Enter your personal details to store your game progress</p>
            <button className="hidden" id="login">
              Sign In
            </button>
          </div>
          <div className="toggle-panel toggle-right">
            <h1>Welcome!</h1>
            <p>Register with your personal details to store your progress</p>
            <button className="hidden" id="register" onClick={handleToggle}>
              Sign Up
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default LoginPage;
